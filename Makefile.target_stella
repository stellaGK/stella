stella_all: modules stella

# undefined reference to `get_git_state` or `get_git_hash`? You need to manually
# add a dependency of the affected binary on `$(OBJDIR)/git_version_impl.o` like
# below. This file needs to be first in the list of dependencies so that the
# file that needs the functions can find them. Yes this is unpleasant, no we
# (probably?) can`t automate this like for the other dependencies. `fortdep`
# doesn't understand Fortran submodules, so can't pick this up
stella: git_version_impl.o $(stella_mod)
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

stella.x: git_version_impl.o $(stella_mod)
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

automated-fortran-tests: git_version_impl.o
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

.PHONY: modules utils_all geo_all vmec

modules: utils_all geo_all

### UTILS
utils_all: utils.a

UTIL_OBJ = spl.o constants.o file_utils.o netcdf_utils.o command_line.o
utils.a: $(UTIL_OBJ)
	$(ARCH) $(ARCHFLAGS) $@ $^
	$(RANLIB) $@

### VMEC interface
vmec:
	$(MAKE) -C $(VMEC)

mini_libstell.a:
	$(MAKE) -C $(VMEC)/mini_libstell

### GEO
geo_all: vmec geo.a

GEO_OBJ = stella_geometry.o inputprofiles_interface.o millerlocal.o vmec_geo.o

geo.a:  $(GEO_OBJ)
	$(ARCH) $(ARCHFLAGS) $@ $^
	$(RANLIB) $@

distclean:
	-rm -f stella stella.x

vmec_to_stella_geometry_interface.o: | vmec
